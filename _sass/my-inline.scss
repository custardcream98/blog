// You can add CSS rules here that will be inlined into each document.
.sidebar a {
  text-shadow: rgba(0, 0, 0, 0.25) 0.1rem 0.1rem 0.15rem;
}

$dark-blue: #204056;

.hr-bottom {
  border-bottom: 1.5px dashed $dark-blue;
  padding-bottom: 0.75rem;
  margin-bottom: 1rem;
}

html[data-theme="light"] {
  --link-color: rgb(0, 112, 201);
  --main-background-color: #fff;
  --main-text-color: hsl(0, 0%, 20%);
  --border-color: #ebebeb;
  --highlight-color: #b98f8f;
  --menu-text-color: rgb(71, 71, 71);
  --highlight-bg: rgba(196, 196, 196, 0.219);
  --gray-bg: rgba(0, 0, 0, 0.025);
  --applause-button-after: rgb(0, 160, 209);
}

html[data-theme="dark"] {
  --link-color: rgb(100, 210, 255);
  --main-background-color: hsl(0, 0%, 20%);
  --main-text-color: hsl(0, 0%, 85%);
  --border-color: #307d99;
  --menu-text-color: #bbb;
  --highlight-bg: rgba(161, 161, 161, 0.096);
  --code-text: #abb2bf;
  --gray-bg: rgba(255, 255, 255, 0.033);
  --applause-button-after: rgb(0, 160, 209);
}

body {
  background-color: var(--main-background-color);
  color: var(--main-text-color);
  padding: 1em;
}

#_navbar {
  background-color: var(--main-background-color) !important;
}

.nav-btn-bar {
  background-color: var(--main-background-color) !important;
}

article {
  max-width: 650px;
  margin: 2em auto;
}

.flip-title {
  color: var(--main-text-color);
}

// h1 {
//   font-size: 2rem;
// }

// h2 {
//   font-size: 1.5rem;
//   margin-top: 2em;
// }

// p {
//   font-size: 1.1rem;
// }

main a {
  color: var(--main-text-color) !important;
}

.external {
  color: var(--main-text-color) !important;
}

.note-sm {
  color: var(--main-text-color);
}

.switch-button {
  position: relative;
  display: inline-block;
  width: 55px;
  height: 30px;
  border-color: hsl(0, 0%, 40%);
  border-radius: 20px;
  border-width: 1px;
}
.switch-button input {
  opacity: 0;
  width: 0;
  height: 0;
}
.onoff-switch {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 20px;
  background-color: rgba(0, 37, 250, 0.39);
  -webkit-transition: 0.4s;
  //box-shadow: inset 1px 5px 1px #e3ae56;
  transition: 0.4s;
}
.onoff-switch:before {
  position: absolute;
  content: "";
  height: 22px;
  width: 22px;
  left: 4px;
  bottom: 4px;
  background-color: #fff;
  -webkit-transition: 0.5s;

  transition: 0.4s;
  border-radius: 20px;
}
.switch-button input:checked + .onoff-switch {
  background-color: #222222;
}
.switch-button input:checked + .onoff-switch:before {
  -webkit-transform: translateX(26px);
  background-color: #333;
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

th {
  background-color: var(--border-color);
  color: var(--main-text-color);
}

td {
  background-color: var(--main-background-color) !important;
}

// .content .avatar {
//   float: right;
//   box-sizing: content-box;
//   border: 1rem solid var(--main-background-color) !important;
//   transition: border-color 1s ease;
//   margin-top: -1.5rem;
//   margin-right: -1rem;
// }

// .avatar {
//   width: 8rem;
//   border-radius: 100%;
//   overflow: hidden;
//   display: inline-block;
//   position: relative;
//   z-index: 1;
// }

.nav-btn {
  color: var(--menu-text-color);
}

pre {
  background-color: var(--highlight-bg);
}

mjx-container {
  overflow-x: hidden;
  overflow-y: hidden;
}

blockquote {
  color: rgb(150, 150, 150) !important;
}

code {
  background-color: var(--gray-bg);
}

// applause btn
@mixin animate-once($name) {
  animation-name: $name;
  animation-duration: 0.5s;
  animation-iteration-count: 1;
}

@mixin centered-square($size) {
  position: absolute;
  width: $size;
  height: $size;
  margin-left: (100% - $size) / 2;
  margin-top: (100% - $size) / 2;
}

@mixin position-fill() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

applause-button {
  position: relative;
  cursor: pointer;

  .style-root {
    @include position-fill();

    &:after {
      @include position-fill();
      content: " ";
      display: block;
      border-radius: 50%;
      border: 1px solid;
    }
    &:hover:after:not(.clap-limit-exceeded) {
      border-color: inherit;
    }
  }

  &.loading {
    opacity: 0.5;
  }

  .shockwave {
    @include position-fill();
    border-radius: 50%;
  }

  svg {
    @include centered-square(60%);
    @include position-fill();
    opacity: 0.8;
    stroke: none;
    // annoyingly bootstrap has a higher precedence rule that sets overflow to hidden
    // hence the bang-important
    overflow: visible !important;

    g.flat {
      visibility: hidden;
    }
    g.outline {
      visibility: visible;
    }
  }

  &.clap-limit-exceeded {
    cursor: inherit;
    div {
      fill: var(--applause-button-after) !important;
      stroke: var(--applause-button-after) !important;
      color: var(--applause-button-after) !important;
    }
  }

  &.clapped {
    svg {
      g.flat {
        visibility: visible;
      }
      g.outline {
        visibility: hidden;
      }
    }
  }

  .count-container {
    position: absolute;
    top: -40%;
    width: 100%;
    color: inherit;
    user-select: none;

    .count {
      text-align: center;
    }
  }

  g.sparkle {
    circle {
      opacity: 0;
      stroke-width: 0;
    }

    $elements: 5;
    $degrees: 360deg / $elements;
    @for $i from 0 to $elements {
      g:nth-child(#{$i + 1}) {
        transform: rotate($degrees * $i) translateX(10px);
      }
    }
  }

  &:hover:not(.clapped) {
    .shockwave {
      animation-name: shockwave;
      animation-duration: 1s;
      animation-iteration-count: infinite;
      animation-timing-function: ease-in;
    }
  }

  // CSS that is toggled to fire one-time animations
  &.clap {
    .sparkle circle {
      @include animate-once(explode);
    }

    @include animate-once(pulse);

    .count {
      @include animate-once(hideThenShow);
    }
  }
}

@keyframes explode {
  0% {
    transform: translateX(10px);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translateX(25px);
  }
}

@keyframes shockwave {
  0% {
    transform: scale(1);
    box-shadow: 0 0 2px;
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 0;
    box-shadow: 0 0 50px, inset 0 0 10px;
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes hideThenShow {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  20% {
    opacity: 0;
    transform: translateY(-10px);
  }
  50% {
    transform: translateY(10px);
  }
  80% {
    transform: translateY(10px);
    opacity: 0;
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
